<video autoplay></video>
<img id="snap-shot" src="" width="600" height="400">
<canvas style="display:none;"></canvas>

<% @response["imageKeywords"].each do |word_object| %>
  <h2><%= word_object['text'] %></h2>
<% end %>

<script>
  var video  = document.querySelector('video')
  var canvas = document.querySelector('canvas')
  var ctx    = canvas.getContext('2d')

  function snapshot() {
    if (localMediaStream) {
      ctx.drawImage(video, 0, 0, 600, 400, 0, 0, 300, 150) // default canvas size 300x150
      // "image/webp" works in Chrome. Other browsers will fall back to image/png.
      document.querySelector('img').src = canvas.toDataURL('image/png')

      var file = dataURLtoBlob(canvas.toDataURL('image/png'))
      // Create new form data
      var fd = new FormData()
      // Append our Canvas image file to the form data
      fd.append("image", file)
      // And send it
      $.ajax({
         url: "/screenshot",
         type: "POST",
         data: fd,
         processData: false,
         contentType: false,
      });

    }
  }

  function dataURLtoBlob(dataURL) {
    var binary = atob(dataURL.split(',')[1]);
    var array = [];
    for(var i = 0; i < binary.length; i++) {
        array.push(binary.charCodeAt(i));
    }
    return new Blob([new Uint8Array(array)], {type: 'image/jpeg'});
  }

  video.addEventListener('click', snapshot, false)

  var errorCallback = function(e) {
    console.log('Rejected!', e)
  }

  var hdConstraints = {
    video: {
      mandatory: {
        maxWidth: 600,
        maxHeight: 400
      }
    }
  }

  navigator.getUserMedia  = navigator.getUserMedia       ||
                            navigator.webkitGetUserMedia ||
                            navigator.mozGetUserMedia    ||
                            navigator.msGetUserMedia

  navigator.getUserMedia(hdConstraints, function(stream) {
    video.src = window.URL.createObjectURL(stream)
    localMediaStream = stream
  }, errorCallback)

</script>
